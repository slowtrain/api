-----------------------------------------
-- 기본 SCHEMA 는 SAM
-----------------------------------------
-- 1. COMPUTER SYSTEM VIEW
-----------------------------------------
CREATE OR REPLACE VIEW SAM.IM_COMPUTER_V
AS
(
SELECT X.ID, X.COMPUTER_ID, X.NODE_ID, X.PARENT_ID, X.BIGFIX_ID
	, X.COMTYPE, X.SERVERTYPE
	, CASE WHEN COALESCE(X.OS_TYPE,'') = 'AIX' THEN 'AixUnitaryComputerSystem'
		   WHEN COALESCE(X.OS_TYPE,'') = 'LINUX' THEN 'LinuxUnitaryComputerSystem'
		   WHEN COALESCE(X.OS_TYPE,'') = 'WINDOWS' THEN 'WindowsComputerSystem'
	  ELSE 'ComputerSystem' END AS COMCLASSTYPE
	, CASE WHEN X.SERVERTYPE = 'Virtual' THEN 1 ELSE 0 END AS ISVIRTUAL
	, X.TYPE
	, CASE WHEN X.TYPE NOT IN ( 0, 1 ) AND COALESCE(X.HARDWARE_MODEL,'') = 'AHV' THEN 'NUTANIX'
		   WHEN X.TYPE NOT IN ( 0, 1 ) AND COALESCE(X.OS_TYPE,'') = 'AIX' THEN 'IBMLPAR'
	  ELSE NULL END AS VIRTYPE
	, X.IS_CURRENT, X.FIRST_SEEN, X.LAST_SEEN, X.IS_DELETED, X.DELETION_DATE	
	, X.NAME
	, X.DNS_NAME
	, COALESCE(X.HOSTNAME,X.NAME) AS HOSTNAME
	, X.IP
	, SUBSTR(X.IPLIST, 1, LENGTH(X.IPLIST) - 2) AS IPLIST
	, X.OS_TYPE
	, X.OS_NAME, X.OS_VERSION
	, X.HARDWARE_NAME	
	, CASE WHEN COALESCE(X.SERVERTYPE,'') = 'Virtual' AND X.OS_TYPE <> 'AIX' AND COALESCE(X.HARDWARE_MODEL,'') <> 'AHV' THEN X.VMUUID
	  ELSE X.HARDWARE_SERIALNUMBER END AS HARDWARE_SERIALNUMBER
	--, X.VMID	
	--, UPPER(X.VMUUID) AS VMUUID
	, X.HARDWARE_MANUFACTURER, X.HARDWARE_TYPE, X.HARDWARE_MODEL, X.PLATFORM
	, X.PROCESSOR_BRAND_STRING
	, CASE WHEN X.CPUPHYSNUM = 0 THEN NULL ELSE X.CPUPHYSNUM END AS CPUPHYSNUM
	, CASE WHEN X.CPUCORETOT = 0 THEN NULL ELSE X.CPUCORETOT END AS CPUCORETOT
	, CASE WHEN X.CPULOGINUM = 0 THEN NULL ELSE X.CPULOGINUM END AS CPULOGINUM
	, CASE WHEN COALESCE(X.CPUCORETOT,0) <> 0 AND COALESCE(X.CPULOGINUM,0) <> 0 AND COALESCE(X.CPUCORETOT,0) <> COALESCE(X.CPULOGINUM,0) THEN 'Y'
		   WHEN COALESCE(X.CPUCORETOT,0) <> 0 AND COALESCE(X.CPULOGINUM,0) <> 0 AND COALESCE(X.CPUCORETOT,0) = COALESCE(X.CPULOGINUM,0) THEN 'N'
	  ELSE NULL END AS ISHYPERTHREAD
	, X.MEM_TOTAL_PHYSICAL, X.MEM_FREE_PHYSICAL
	--, X.*
FROM
(
SELECT CO.ID
	, CO.COMPUTER_ID
	, CO.SERVER_ID NODE_ID
	--, HW.NODE_ID -- CO.SERVER_ID 와 동일하다. HW.NODE_ID 와 CO.SERVER_ID 가 동일하고, HW.COMPUTER_ID 와 CO.COMPUTER_ID 가 동일하다. 그런데 에이전트가 설치되지 않은 물리서버들은 CO.COMPUTER_ID 가 0 이고, HW.COMPUTER_ID 가 NULL 이다.
	, CO.PARENT_ID	-- SAM.COMPUTER_SYSTEM (CO) 의 ID 와 연결
	, COALESCE(CD.REMOTE_ID,0) AS BIGFIX_ID
	, 'ComputerSystem' AS COMTYPE
	, CASE WHEN CO.TYPE IS NULL THEN 'DELETED'
		   WHEN CO.TYPE IN ( 0, 1 ) AND COALESCE(NC.HARDWARE_MODEL,'') <> 'AHV' THEN 'Host'	
		   WHEN CO.TYPE IN ( 0, 1 ) AND COALESCE(NC.HARDWARE_MODEL,'') = 'AHV' THEN 'Virtual'
	  ELSE 'Virtual' END AS SERVERTYPE
	, CO.TYPE
	, CO.IS_CURRENT
    , HW.CREATION_TIME AS FIRST_SEEN					-- GMT TIME
    , HW.LAST_SEEN AS LAST_SEEN							-- GMT TIME
    , HW.DELETED AS IS_DELETED
    , HW.DELETED_TIME AS DELETION_DATE	
    , COALESCE(COALESCE(COALESCE(CD.NAME,HW.HOSTNAME),CD.NAME),NC.TAG) AS NAME
	--, CASE WHEN CD.NAME IS NULL THEN HW.HOSTNAME
    --  ELSE CD.NAME END AS NAME 
    , CD.DNS_NAME
    , HW.HOSTNAME
    , '[' || HW.IP || ']' AS IP
    , '[' || REPLACE(CD.IP_ADDRESS,CHR(10),'],[') AS IPLIST
    , CASE WHEN COALESCE(CD.REMOTE_ID,0) <> 0 AND CD.OS_NAME IS NULL THEN UPPER(HW.OS_NAME)
           WHEN COALESCE(CD.REMOTE_ID,0) = 0 AND COALESCE(NC.PLATFORM,'') LIKE 'Power%' THEN 'AIX'
      ELSE UPPER(CD.OS_NAME) END AS OS_TYPE
	, CASE WHEN HW.OS_FULL_NAME LIKE 'Win2003%' THEN 'Microsoft Windows Server 2003'
		   WHEN COALESCE(CD.REMOTE_ID,0) = 0 AND COALESCE(NC.PLATFORM,'') LIKE 'Power%' THEN 'AIX'
	  ELSE COALESCE(COALESCE(OS.NAME,CD.OS),HW.OS_NAME) END AS OS_NAME
	, HW.OS_FULL_NAME AS OS_VERSION
    --, CASE WHEN CD.OS IS NULL THEN HW.OS_NAME 
    --  ELSE CD.OS END AS OS	
	--, HW.OS_NAME
	--, HW.OS_FULL_NAME
    , NC.TAG AS HARDWARE_NAME
    , NC.NAME AS HARDWARE_SERIALNUMBER
    --, VM.AGENT_ID AS VMID
    , UPPER(VU.UUID) AS VMUUID
    , NC.HARDWARE_MANUFACTURER AS HARDWARE_MANUFACTURER
    , NC.HARDWARE_TYPE AS HARDWARE_TYPE
    , NC.HARDWARE_MODEL AS HARDWARE_MODEL
    , NC.PLATFORM
    , P.PROCESSOR_BRAND_STRING
    , CASE WHEN CO.TYPE IN ( 0, 1 ) AND CO.COMPUTER_ID <> 0 THEN P.NODE_TOTAL_PROCESSORS			-- AGENT 가 설치되는 HOST 인 경우
    	   WHEN CO.TYPE IN ( 0, 1 ) AND CO.COMPUTER_ID = 0 THEN 									-- AGENT 가 설치 안되는 HOST 정보
    	   		(SELECT NODE_TOTAL_PROCESSORS FROM ADM.CURRENT_HARDWARE_INVENTORY WHERE AGENT_ID = (SELECT COMPUTER_ID FROM SAM.COMPUTER_SYSTEM WHERE PARENT_ID = CO.ID FETCH FIRST ROWS ONLY))
    	   WHEN CO.TYPE NOT IN ( 0, 1 ) AND CO.COMPUTER_ID <> 0 AND CD.OS_NAME = 'AIX' THEN CAST (p.no_processors_agt AS DECIMAL(7,2)) / 100	-- AIX 가상화인 경우만 데이터가 있다.
	  ELSE NULL END AS CPUPHYSNUM																						-- 나머지 가상화는 가져오지 못하다.
	, CASE WHEN CO.TYPE IN ( 0, 1 ) AND CO.COMPUTER_ID <> 0 THEN P.NO_PROCESSORS_SRV				-- AGENT 가 설치되는 HOST 인 경우
	  ELSE NULL END AS CPUCORETOT																	-- AGENT 가 설치안되는 HOT 인 경우나 virtual 인 경우, 데이터가 없다.
    , CASE WHEN CO.TYPE IN ( 0, 1 ) AND CO.COMPUTER_ID = 0 THEN 									-- AGENT 가 설치안되는 HOST 인 경우
    			(SELECT NO_PROCESSORS_SRV FROM ADM.CURRENT_HARDWARE_INVENTORY WHERE AGENT_ID = (SELECT COMPUTER_ID FROM SAM.COMPUTER_SYSTEM WHERE PARENT_ID = CO.ID FETCH FIRST ROWS ONLY))
      ELSE P.NO_LOGICAL_PROCESSORS_AGT END AS CPULOGINUM
    --, P.NO_PROCESSORS_SRV AS SERVER_CORES
    --, P.NODE_TOTAL_PROCESSORS AS SERVER_PROCESSORS  
    , MEM.TOTAL_PHYSICAL    MEM_TOTAL_PHYSICAL				-- DEEP HARWARE SCANNING 을 해야 한다.
    , MEM.FREE_PHYSICAL     MEM_FREE_PHYSICAL				-- DEEP HARWARE SCANNING 을 해야 한다.
	--, HW.*
	--, CO.*
FROM SAM.COMPUTER_SYSTEM CO
LEFT JOIN ADM.COMPUTER_HW HW ON HW.COMPUTER_ID = CO.COMPUTER_ID
LEFT JOIN DBO.COMPUTER_DIMENSION CD ON CD.ID = CO.COMPUTER_ID
LEFT JOIN ADM.CURRENT_HARDWARE_INVENTORY P ON P.AGENT_ID = CO.COMPUTER_ID
LEFT JOIN ADM.NODE NC ON NC.ID = CO.SERVER_ID 
LEFT JOIN ADM.AGT_VM_REL VM ON VM.AGENT_ID = CO.COMPUTER_ID AND VM.END_TIME = '9999-12-31-23.59.59.997000'
LEFT JOIN ADM.VIRTUAL_VM_UUID VU ON VU.VM_ID = VM.VM_ID
LEFT JOIN SAM.DEEP_HW_MEMORIES MEM ON MEM.COMPUTER_ID = CO.COMPUTER_ID
LEFT JOIN SAM.DEEP_HW_OPERATING_SYSTEMS OS ON OS.COMPUTER_ID = CO.COMPUTER_ID
--LEFT JOIN SAM.DEEP_HW_PHYSICAL_PROCESSORS CPU ON CPU.COMPUTER_ID = CO.COMPUTER_ID -- 이건 프로세서별로 나오게 되니, 여러 라인이 나온다.
--WHERE CO.TYPE IS NULL
--WHERE HW.DELETED = 1
--WHERE COALESCE(HW.DELETED,0) <> 1        -- HW.DELETED 가 1 인것은 삭제된 것이다. 현재 정보만 조회한다.
--WHERE CO.ID IN (64, 42, 70, 59)
) X
WHERE COALESCE(X.SERVERTYPE,'') || COALESCE(X.HARDWARE_SERIALNUMBER,'') NOT LIKE 'HostTLM_VM%'		-- vCenter 와 아직 연결되지 않은 서버 정보는 조회에서 제외한다.
AND X.OS_TYPE IS NOT NULL
--AND COALESCE(X.OS_NAME,'') <> 'Microsoft Windows Server 2003'
)
;
-----------------------------------------
-- 2. Installed Software View
-----------------------------------------
CREATE OR REPLACE VIEW SAM.IM_COMPUTER_SW_V
AS
(
SELECT PI.ID INSTANCE_ID
	, PI.INSTANCE_HASH INSTANCE_HASH
	, CO.ID AS ID
	, PI.COMPUTER_ID AS COMPUTER_ID
	, cd.remote_id AS computer_bigfix_id
	, CASE WHEN CD.NAME IS NULL THEN HW.HOSTNAME ELSE CD.NAME END AS COMPUTER_NAME
	, HW.IP COMPUTER_IP_ADDRESS
    , CASE WHEN CD.OS_NAME IS NULL THEN HW.OS_NAME 
      ELSE CD.OS_NAME END AS OS_TYPE
	--, HW.OS_FULL_NAME AS OS_VERSION	
    , CASE WHEN PI.END_TIME = '9999-12-31 23:59:59.997' THEN 1 ELSE 0 END AS IS_PRESENT
	, PI.START_TIME AS DISCOVERY_START
	, PI.END_TIME AS DISCOVERY_END
	, prod_p.name AS product_publisher_name	
	, prod_p.guid AS product_publisher_guid
	, st.name AS product_name
	, st.guid AS product_guid
	, stv.name AS product_version_name
	, stv.version AS product_version
	, stv.guid AS product_version_guid	
	, str.name AS product_release_name
	, str.release AS product_release
	, str.guid AS product_release_guid
    , ver.version AS detailed_version	
	, CASE WHEN PI.PATH_ID IN (-1,0) THEN NULL
	  --ELSE P.PATH || CHR(10)
	  ELSE P.PATH
	  END AS DISCOVERY_PATH    
    --, sc.id AS component_id
    --, sc.name AS component_name
    --, sc.release AS component_release
    --, sc.guid AS component_release_guid
    --, sc.root_guid AS component_release_family_guid
    --, comp_p.name AS component_publisher_name  
	, HW.DELETED AS IS_DELETED
--	, PI.*
FROM ADM.PROD_INV PI
--JOIN SAM.SOFTWARE_COMPONENTS SC ON SC.ID = PI.COMPONENT_ID		-- Component 는 굳이 조회하지 않는다.
JOIN SAM.VERSIONS VER ON VER.ID = PI.VERSION_ID						-- SAM.VERSIONS : 상세 버전이 기록되는 테이블
LEFT JOIN SAM.COMPUTER_SYSTEM CO ON CO.COMPUTER_ID = PI.COMPUTER_ID
LEFT JOIN ADM.COMPUTER_HW HW ON HW.COMPUTER_ID = PI.COMPUTER_ID
LEFT JOIN DBO.COMPUTER_DIMENSION CD ON CD.ID = PI.COMPUTER_ID
LEFT JOIN ADM.PATHS P ON PI.PATH_ID = P.ID
LEFT JOIN adm.branch b ON pi.branch_id = b.id  						-- ADM.BRANCH 에 COMPONENT 와 연결되는 RELEASE 가 기록된다. 그리고 그 RELEASE 에 해당하는 PRDUCT 이 기록된다.  
LEFT JOIN sam.software_titles st ON b.product_id = st.id    
LEFT JOIN sam.software_title_releases str ON b.release_id = str.id
LEFT JOIN sam.SOFTWARE_TITLE_VERSIONS stv ON str.SOFTWARE_TITLE_VERSION_id = stv.id
LEFT JOIN sam.publishers prod_p ON prod_p.id = st.publisher_id
WHERE st.name IS NOT NULL
--WHERE st.name = 'Microsoft Office'
--ORDER BY st.name, stv.name, stv.version, str.name, str.release
)
;

-------------------------------------------
-- VM RELATION VIEW (OLD)
-------------------------------------------
SELECT HW.LAST_SEEN AS TGT_LAST_SEEN
	, CO.ID AS TGT_ID
	, CO.COMPUTER_ID AS TGT_COMPUTER_ID
	, CD.REMOTE_ID AS TGT_BIGFIX_ID 
	--, HW.HOSTNAME AS TGT_HOSTNAME
	, CO.PARENT_ID	AS SRC_ID -- SAM.COMPUTER_SYSTEM (CO) 의 ID 와 연결
	, (SELECT COMPUTER_ID FROM SAM.COMPUTER_SYSTEM WHERE ID = CO.PARENT_ID) AS SRC_COMPUTER_ID
	, NULL AS TGT_BIGFIX_ID
--	, COP.COMPUTER_ID AS SRC_COMPUTER_ID
--	, COP.SERVER_ID AS SRC_NODE_ID
--	, CDP.REMOTE_ID AS SRC_BIGFIX_ID 
--	, HWP.HOSTNAME AS SRC_HOSTNAME	
FROM SAM.COMPUTER_SYSTEM CO
LEFT JOIN ADM.COMPUTER_HW HW ON HW.COMPUTER_ID = CO.COMPUTER_ID
LEFT JOIN DBO.COMPUTER_DIMENSION CD ON CD.ID = CO.COMPUTER_ID
--LEFT JOIN SAM.COMPUTER_SYSTEM COP ON COP.ID = COV.PARENT_ID
--LEFT JOIN ADM.COMPUTER_HW HWP ON HWP.NODE_ID = COP.SERVER_ID
--LEFT JOIN DBO.COMPUTER_DIMENSION CDP ON CDP.ID = COP.COMPUTER_ID
WHERE CO.PARENT_ID IS NOT NULL 
--WHERE CO.TYPE IS NULL
AND HW.DELETED = 0		-- 현재 에이전트가 동작하는 것만 보여준다.
--WHERE CO.ID IN (64, 42, 70, 59)

-------------------------------------------
-- VM RELATION VIEW (NEW. 2019.10.10)
-------------------------------------------
SELECT HW.LAST_SEEN AS LAST_SEEN
	, CO.PARENT_ID	AS SRC_ID -- SAM.COMPUTER_SYSTEM (CO) 의 ID 와 연결
	, (SELECT COMPUTER_ID FROM SAM.COMPUTER_SYSTEM WHERE ID = CO.PARENT_ID) AS SRC_COMPUTER_ID
	, 0 AS SRC_BIGFIX_ID
	, 'VIRTUALIZE'				RELATIONNM	
	, CO.ID AS TGT_ID
	, CO.COMPUTER_ID AS TGT_COMPUTER_ID
	, CD.REMOTE_ID AS TGT_BIGFIX_ID 	
FROM SAM.COMPUTER_SYSTEM CO
LEFT JOIN ADM.COMPUTER_HW HW ON HW.COMPUTER_ID = CO.COMPUTER_ID
LEFT JOIN DBO.COMPUTER_DIMENSION CD ON CD.ID = CO.COMPUTER_ID
WHERE CO.PARENT_ID IS NOT NULL 
AND HW.DELETED = 0		-- 현재 에이전트가 동작하는 것만 보여준다.