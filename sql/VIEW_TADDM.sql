-- TADDM 에서 보이는 모든 시간은 GMT 시간이다.
-----------------------------------------
-- 1. COMPUTER SYSTEM VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_V
AS
WITH HOSTIP (PK_X, RNUM, IP_X)
AS
(
        SELECT BASE.PK_X, BASE.RNUM, BASE.IP_X
        FROM (
            SELECT PK_X, ROWNUMBER() OVER (PARTITION BY PK_X) AS RNUM, IP_X
			FROM (
				SELECT  COMP.PK_X
                        --, ROWNUMBER() OVER (PARTITION BY COMP.PK_X) AS RNUM
                        , IP.DISPLAYNAME_X AS IP_X
                FROM COMPSYS COMP
                LEFT JOIN NTINTRFC NETIF ON NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X
                LEFT JOIN IPADDR IP ON IP.PK_X = NETIF.PK__IPADDRESS_X AND IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV4AddressJdo'
                WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'Router', 'LoadBalancer')
                AND IP.DISPLAYNAME_X IS NOT NULL
                AND COALESCE(IP.DISPLAYNAME_X,'') NOT IN ('127.0.0.1')
                AND (SELECT COALESCE(ENCAPSULATION_X,'') FROM NTINTRFC WHERE PK_X = NETIF.PK__L2INTERFACE_X) NOT IN ('Local Loopback')  -- LOCAL LOOPBACK IP 는 제외한다.
				ORDER BY COMP.PK_X, IP.DISPLAYNAME_X
			)
        ) BASE
        WHERE BASE.RNUM = 1
        
        UNION ALL
        
        SELECT  EXT.PK_X, EXT.RNUM, T0.IP_X || '],[' || EXT.IP_X
        FROM    (
            SELECT PK_X, ROWNUMBER() OVER (PARTITION BY PK_X) AS RNUM, IP_X
			FROM (
				SELECT  COMP.PK_X
                        --, ROWNUMBER() OVER (PARTITION BY COMP.PK_X) AS RNUM
                        , IP.DISPLAYNAME_X AS IP_X
                FROM COMPSYS COMP
                LEFT JOIN NTINTRFC NETIF ON NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X
                LEFT JOIN IPADDR IP ON IP.PK_X = NETIF.PK__IPADDRESS_X AND IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV4AddressJdo'
                WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'Router', 'LoadBalancer')
                AND IP.DISPLAYNAME_X IS NOT NULL
                AND COALESCE(IP.DISPLAYNAME_X,'') NOT IN ('127.0.0.1')
                AND (SELECT COALESCE(ENCAPSULATION_X,'') FROM NTINTRFC WHERE PK_X = NETIF.PK__L2INTERFACE_X) NOT IN ('Local Loopback')  -- LOCAL LOOPBACK IP 는 제외한다.
				ORDER BY COMP.PK_X, IP.DISPLAYNAME_X
			)
        ) EXT, HOSTIP T0
        WHERE T0.PK_X = EXT.PK_X
        AND T0.RNUM + 1 = EXT.RNUM
        AND T0.RNUM < 10	-- 너무 많은 IP 를 가지고 있는 것들이 있을수 있으므로 10개까지만 한다.
)
SELECT COMP.PK_X	PK_X_COMPSYS			-- TADDM COMPSYS 의 KEY
	, COMP.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH	-- 최종 수정 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (COMP.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, COMP.LASTSTOREDTIME_X	LASTSTOREDTIME_X_EPOCH	-- 최종 저장 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (COMP.LASTSTOREDTIME_X / 1000.0) SECONDS LASTSTOREDTIME_X
	, COMP.DELETED_X			-- 삭제 여부. 0 이면 동작. 1이면 삭제	
	, CASE WHEN COMP.VIRTUAL_X = 1 AND EXISTS (SELECT PK__HOST_X FROM APPSRVR WHERE JDOCLASSX IN ('com.collation.topomgr.jdo.topology.app.KVMJdo') AND PK__HOST_X = COMP.PK__HOSTSYSTEM_X) 
		   		AND (SELECT UPPER(KERNELVERSION_X) FROM OPSYS WHERE PK_X = (SELECT PK__OSRUNNING_X FROM COMPSYS WHERE PK_X = COMP.PK__HOSTSYSTEM_X)) LIKE '%NUTANIX%' 
				THEN COALESCE(COMP.DISPLAYNAME_X, COMP.NAME_X)			-- NUTANIX 인 경우, DISPLAYNAME 을 사용한다.
	  ELSE COALESCE(COMP.NAME_X, COMP.DISPLAYNAME_X) END AS NAME_X		-- NAME 이 없으면 DISPLAYNAME 을 사용한다.
	--, COALESCE(COMP.DISPLAYNAME_X, COMP.NAME_X)	AS NAME_X		-- DISPLAYNAME 을 기준으로 사용한다. 없으면 NAME 을 사용한다.
	--, CASE WHEN COMP.VIRTUAL_X = 1 AND EXISTS (SELECT PK__HOST_X FROM APPSRVR WHERE JDOCLASSX IN ('com.collation.topomgr.jdo.topology.app.KVMJdo') AND PK__HOST_X = COMP.PK__HOSTSYSTEM_X) 
	--	   		AND (SELECT UPPER(KERNELVERSION_X) FROM OPSYS WHERE PK_X = (SELECT PK__OSRUNNING_X FROM COMPSYS WHERE PK_X = COMP.PK__HOSTSYSTEM_X)) LIKE '%NUTANIX%' 
	--			THEN COALESCE(COMP.DISPLAYNAME_X, COMP.NAME_X)			-- NUTANIX 인 경우, DISPLAYNAME 을 사용한다.
	--  ELSE COALESCE(COMP.NAME_X, COMP.DISPLAYNAME_X) END AS HOSTNAME_X		-- NAME 이 없으면 DISPLAYNAME 을 사용한다.
	, COALESCE(COMP.NAME_X, COMP.DISPLAYNAME_X) AS HOSTNAME_X	-- NAME 을 HOSTNAME 으로 사용한다.
	--, COMP.NAME_X AS NAME_X_ORG
	--, COMP.DISPLAYNAME_X AS DISPLAYNAME_X_ORG
	--, COMP.TYPE_X				-- 유형
	, CASE WHEN COMP.TYPE_X = 'Template' THEN 'ComputerSystem' ELSE COMP.TYPE_X END AS TYPE_X				-- Template 인 것은 죽어 있는 VM 이다.
	, COMP.HIERARCHYDOMAIN_X	-- CI CLASS 계통도 이름
	, COMP.HIERARCHYTYPE_X		-- CI CLASS 계통도 이름	
	, COMP.ARCHITECTURE_X		-- 아키텍처
	, COMP.DISPLAYNAME_X		-- 표현명
	--, COMP.CONTEXTIP_X			-- 주 IP 주소가 아님. 수정해야 함.
	, COMP.CONTEXTIP_X			-- 관리 IP 주소
	, CASE WHEN COMP.TYPE_X IN ('Bridge', 'Router', 'LoadBalancer') THEN '[' || COMP.CONTEXTIP_X || ']'
	  ELSE '[' || IPLIST.IP_X || ']' END AS IP_X		-- IP 목록
	, IPMAX.MNUM AS IPLISTNUM_X
	, COMP.FQDN_X				-- FQDN 명
	, COMP.JDOCLASSX			-- CI CLASS 명
	, COMP.MANUFACTURER_X		-- 제조사
	, COMP.MODEL_X				-- 모델
	, CASE WHEN COMP.PK__HOSTSYSTEM_X IS NULL AND UPPER(COMP.MODEL_X) NOT LIKE '%VIRTUAL%' THEN COMP.SERIALNUMBER_X		-- SERIAL NUMBER. 물리시스템의 SERIAL NUMBER. NUTANIX 가상화 장비, HYPERV 는 VM ID. LPAR 는 모 서버의 SERIAL NUMBER. 그래서 여러 장비가 동일하다.
	  ELSE COMP.UUID_X END AS SERIALNUMBER_X								-- 가상화 시스템은 UUID_X 를 SERIAL NUMBER 로 한다. 
	, COMP.UUID_X				-- 가상화 시스템의 UUID. 네트워크 장비는 NULL
	, CASE WHEN COMP.VIRTUAL_X = 1 AND COMP.ISVMIDANLPAR_X = 1 THEN 'IBMLPAR'				-- IBM LPAR 인 경우
		   WHEN COMP.VIRTUAL_X = 1 AND UPPER(COMP.MODEL_X) LIKE '%VMWARE%' THEN 'VMWARE'	-- VMWARE 인 경우. 직접 스캔한 경우
		   WHEN COMP.VIRTUAL_X = 1 AND UPPER(COMP.VMID_X) LIKE 'VM%' THEN 'VMWARE'			-- VMWARE GUEST. 직접 스캔하지 않은 경우.
		   WHEN COMP.VIRTUAL_X = 1 AND EXISTS (SELECT PK__HOST_X FROM APPSRVR WHERE JDOCLASSX IN ('com.collation.topomgr.jdo.topology.app.KVMJdo') AND PK__HOST_X = COMP.PK__HOSTSYSTEM_X) 
		   		AND (SELECT UPPER(KERNELVERSION_X) FROM OPSYS WHERE PK_X = (SELECT PK__OSRUNNING_X FROM COMPSYS WHERE PK_X = COMP.PK__HOSTSYSTEM_X)) NOT LIKE '%NUTANIX%' THEN 'KVM'			-- KVM 인 경우   		
		   WHEN COMP.VIRTUAL_X = 1 AND EXISTS (SELECT PK__HOST_X FROM APPSRVR WHERE JDOCLASSX IN ('com.collation.topomgr.jdo.topology.app.KVMJdo') AND PK__HOST_X = COMP.PK__HOSTSYSTEM_X) 
		   		AND (SELECT UPPER(KERNELVERSION_X) FROM OPSYS WHERE PK_X = (SELECT PK__OSRUNNING_X FROM COMPSYS WHERE PK_X = COMP.PK__HOSTSYSTEM_X)) LIKE '%NUTANIX%' THEN 'NUTANIX'			-- NUTANIX 인 경우
		   WHEN COMP.VIRTUAL_X = 1 AND UPPER(COMP.MODEL_X) LIKE '%AHV%' THEN 'NUTANIX'								-- NUTANIX 인 경우
		   WHEN COMP.VIRTUAL_X IS NULL AND UPPER(COMP.MODEL_X) LIKE '%AHV%' THEN 'NUTANIX'							-- NUTANIX 인 경우. HOST 를 아직 스캔하지 않은 경우
		   WHEN COMP.VIRTUAL_X = 1 AND UPPER(COMP.MANUFACTURER_X) LIKE '%MICROSOFT%' THEN 'HYPERV'					-- Hyper-V 인 경우
	  ELSE NULL END AS VIRTYPE_X
	--, CASE WHEN UPPER(COMP.MODEL_X) LIKE '%AHV%' THEN 1
	--  ELSE COMP.VIRTUAL_X END AS VIRTUAL_X	-- 가상화 여부. 1이면 가상화. 0이면 비가상화
	, CASE WHEN UPPER(COMP.MODEL_X) LIKE '%AHV%' THEN 1
	       WHEN UPPER(COMP.MODEL_X) NOT LIKE '%AHV%' AND COMP.VIRTUAL_X IS NULL THEN 0 
	  ELSE COMP.VIRTUAL_X END AS VIRTUAL_X		-- 가상화 여부. 1이면 가상화. 0이면 비가상화
	--, COMP.VIRTUALITYTYPE_X		-- 가상화 유형인데 데이터가 없다.
	, COMP.VMID_X				-- 가상화 상의 ID
	, COMP.ISVMIDANLPAR_X		-- LPAR 여부
	, COMP.VIRTUALMACHINESTATE_X	-- VIRUTAL MACHINE 상태. 2이면 실행중. 3이면 꺼짐. 'Bridge', 'Router', 'LoadBalancer' 은 NULL 이다. ESXi Host 도 NULL 이다. 물리서버인 경우 이게 2 이면 실행중이라고 표현된다.
	, COMP.BIOSDATE_X			-- BIOS 업데이트 일자
	, COMP.BIOSMANUFACTURER_X	-- BIOS 제조사
	--, COMP.BIOSVERSION_X		-- BIOS 버전
	, LTRIM(RTRIM(SUBSTR(COMP.BIOSVERSION_X, 1, 99))) 	BIOSVERSION_X	-- BIOS 버전. 너무 긴 스트링이 있어서 잘라서 가져온다.
	, COMP.SYSTEMBOARDUUID_X	-- 시스템 보드 UUID
	--, OP.OSNAME_X	OSNAME_X1		-- OS 이름
	, CASE WHEN OP.OSNAME_X IN ('IOS', 'AIX', 'Vmnix') THEN OP.OSNAME_X
	  ELSE OP.OSVERSION_X END AS OSNAME_X		-- TADDM 은 OS 버전을 OS 명으로 사용한다.
	, CASE WHEN OP.OSNAME_X IN ('IOS', 'AIX') THEN OP.OSVERSION_X	
	  ELSE COALESCE(OP.KERNELVERSION_X, OP.OSVERSION_X) END AS OSVERSION_X		-- TADDM 은 커널 버전을 OS 버전으로 사용한다.
	, OP.OSMODE_X				-- OS 모드
	, OP.KERNELARCHITECTURE_X	-- OS 커널 아키텍처
	, OP.KERNELVERSION_X		-- 커널 버전
	, OP.LEVEL_X				-- 기술 레벨
	, OP.SERVICEPACK_X			-- 서비스 팩		
	, OP.BUILDLEVEL_X			-- 빌드 레벨
	, TO_CHAR(OP.WORDSIZE_X) WORDSIZE_X				-- OS BIT
	--, OP.CHARSET_X
	--, OP.LOCALE_X
	, OP.BOOTTIME_X		BOOTTIME_X_EPOCH		-- 부트 시간. EPOCH Time
	, TIMESTAMP('1970-01-01-00.00.00') + (OP.BOOTTIME_X / 1000.0) SECONDS BOOTTIME_X
	, COMP.CPUSPEED_X / 1000000 AS 	CPUSPEED_X		-- CPU SPEED. MHz 단위
	, COMP.CPUTYPE_X			-- CPU 유형
	, COMP.CPUDIESINSTALLED_X	-- 물리 CPU 수	
	, COMP.CPUCORESINSTALLED_X	-- CPU 총 코어수
	, COMP.NUMCPUS_X			-- 총 논리 CPU 수. 일반적으로 CPU 총 코어수와 일치하나 HYPERTHREADING 이 되어 있는 경우는 2배 이상이 된다. 
	, CASE WHEN COALESCE(COMP.CPUCORESINSTALLED_X,0) <> 0 AND COALESCE(COMP.NUMCPUS_X,0) <> 0 AND COALESCE(COMP.CPUCORESINSTALLED_X,0) <> COALESCE(COMP.NUMCPUS_X,0) THEN 1
		   WHEN COALESCE(COMP.CPUCORESINSTALLED_X,0) <> 0 AND COALESCE(COMP.NUMCPUS_X,0) <> 0 AND COALESCE(COMP.CPUCORESINSTALLED_X,0) = COALESCE(COMP.NUMCPUS_X,0) THEN 0
	  ELSE 0 END AS ISHYPERTHREAD
	, COMP.MEMORYSIZE_X	/ 1024 AS MEMORYSIZE_X				-- 물리적 메모리. KBytes 단위
	, OP.VIRTUALMEMORYSIZE_X / 1024 AS VIRTUALMEMORYSIZE_X	-- 가상메모리. KBytes 단위
	, CASE WHEN COMP.PK__HOSTSYSTEM_X IS NULL AND COMP.MANUFACTURER_X = 'Nutanix' THEN (SELECT PK__HOSTSYSTEM_X FROM COMPSYS WHERE UPPER(NAME_X) = COMP.SERIALNUMBER_X FETCH FIRST ROWS ONLY)
	  ELSE COMP.PK__HOSTSYSTEM_X END AS PK__HOSTSYSTEM_X	-- 가상화 시스템 HOST KEY
	--, COMP.PK__OSRUNNING_X	-- OS 정보 KEY (OPSYS 테이블)
	--, COMP.*
	--, OP.*
FROM COMPSYS COMP
LEFT JOIN OPSYS OP ON OP.PK_X = COMP.PK__OSRUNNING_X AND OP.DELETED_X = 0	-- OS 가 삭제된 후 재 설치될수 있으므로, DELETED 가 아닌 것만 조회한다.
-- IP 목록을 조회한다.
LEFT JOIN ( SELECT PK_X, MAX(RNUM) AS MNUM FROM HOSTIP GROUP BY PK_X ) IPMAX ON IPMAX.PK_X = COMP.PK_X
LEFT JOIN HOSTIP IPLIST ON IPLIST.PK_X = COMP.PK_X AND IPLIST.RNUM = IPMAX.MNUM
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
AND COALESCE(TO_CHAR(COMP.VIRTUALMACHINESTATE_X),'') <> '3'			-- 꺼져 있는 가상 시스템은 데이터를 가져오지 않는다.
AND COMP.HIERARCHYTYPE_X NOT IN ('ComputerSystem')					-- ComputerSystem 은 직접 스캔을 하지 않은것이라 가져오지 않는다.
--AND COMP.HIERARCHYTYPE_X = 'AixUnitaryComputerSystem'
--AND COMP.HIERARCHYTYPE_X = 'LinuxUnitaryComputerSystem'
--AND COMP.HIERARCHYTYPE_X = 'WindowsComputerSystem'
--ORDER BY COMP.PK_X
;
-----------------------------------------
-- 2. COMPUTER SYSTEM CPU VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_CPU_V
AS
(
SELECT COMP.PK_X	PK_X_COMPSYS			-- TADDM COMPSYS 의 KEY
	, CPU.PK_X		PK_X_CPU				-- CPU 의 KEY
	, CPU.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH	-- 최종 수정 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (CPU.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, CPU.LASTSTOREDTIME_X	LASTSTOREDTIME_X_EPOCH	-- 최종 저장 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (CPU.LASTSTOREDTIME_X / 1000.0) SECONDS LASTSTOREDTIME_X	
	, CPU.DELETED_X				-- CPU 삭제 여부. 0 이면 정상, 1 이면 삭제	
	, 'CPU:' || CPU.INDEXORDER_X AS NAME_X
	, CPU.INDEXORDER_X			-- CPU INDEX
	, CPU.VIRTUAL_X				-- 가상 CPU 여부. 1이면 가상 CPU
	, CPU.CPUSPEED_X / 1000000 AS 	CPUSPEED_X			-- CPU SPEED. MHz 단위
	, CPU.CPUTYPE_X				-- CPU 유형
	, CPU.CPUCORESINSTALLED_X	-- CPU CORE 수
	, CPU.NUMCPUS_X				-- HYPERTHREADING 이 고려된 CPU CORE 수
	--, CPU.*
FROM COMPSYS COMP
JOIN CPU CPU ON CPU.PK__PARENTCPU_X = COMP.PK_X
--WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'IpDevice')
--AND CPU.DELETED_X = 0			-- CPU 가 삭제된 후 재 설치될수 있으므로, DELETED 가 아닌 것만 조회한다.
--AND COMP.HIERARCHYTYPE_X = 'AixUnitaryComputerSystem'
--AND COMP.HIERARCHYTYPE_X = 'LinuxUnitaryComputerSystem'
--AND COMP.HIERARCHYTYPE_X = 'WindowsComputerSystem'
--AND COMP.HIERARCHYTYPE_X = 'UnitaryComputerSystem'
)
;
-----------------------------------------
-- 3. COMPUTER SYSTEM FILESYSTEM VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_FS_V
AS
(
SELECT COMP.PK_X	PK_X_COMPSYS		-- TADDM COMPSYS 의 KEY
	, FS.PK_X		PK_X_FS				-- FILESYS 의 KEY
	, FSDTL.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH			-- 최종 수정 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (FSDTL.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, FSDTL.DELETED_X					-- FILESYSTEM 삭제 여부. 0 이면 정상, 1 이면 삭제	
	, FS.MOUNTPOINT_X					-- 파일시스템 마운트명
	--, FSDTL.DESCRIPTION_X				-- 파일시스템 설명
	, CASE WHEN FSDTL.DESCRIPTION_X IS NULL AND FSDTL.HIERARCHYTYPE_X IN ('NFSFileSystem', 'SMBFileSystem') THEN FS.SERVERNAME_X || ':' || FS.EXPORTNAME_X 
	       WHEN FSDTL.DESCRIPTION_X IS NULL AND FSDTL.HIERARCHYTYPE_X NOT IN ('NFSFileSystem', 'SMBFileSystem') THEN FSDTL.DISPLAYNAME_X
	  ELSE FSDTL.DESCRIPTION_X END AS DESCRIPTION_X	-- 파일시스템 설명
	--, FS.TYPE_X							-- 파일시스템 유형
	, CASE WHEN FS.TYPE_X IS NULL AND FSDTL.HIERARCHYTYPE_X = 'NFSFileSystem' THEN 'NFS' 
	       WHEN FS.TYPE_X IS NULL THEN 'N/A' 
	  ELSE FS.TYPE_X END AS TYPE_X -- 파일시스템 유형
	, FSDTL.HIERARCHYTYPE_X				-- 파일시스템 CLASS 명
	, FS.CAPACITY_X						-- 파일시스템 용량. MBytes 단위
	, FS.AVAILABLESPACE_X				-- 파일시스템 가용량. MBytes 단위
	, COALESCE(FS.CAPACITY_X,0) - COALESCE(FS.AVAILABLESPACE_X,0) AS USEDSPACE_X	-- 파일시스템 사용량. MBytes 단위
	--, CASE WHEN FS.CAPACITY_X IS NOT NULL AND FS.CAPACITY_X > 0 THEN 100.00 * (CAST(FS.CAPACITY_X AS DECIMAL(20,2)) - CAST(COALESCE(FS.AVAILABLESPACE_X,0) AS DECIMAL(20,2))) / CAST(FS.CAPACITY_X AS DECIMAL(20,2))
	, CASE WHEN FS.CAPACITY_X IS NOT NULL AND FS.CAPACITY_X > 0 THEN CAST((100.00 * (FS.CAPACITY_X - COALESCE(FS.AVAILABLESPACE_X,0)) / FS.CAPACITY_X) AS DECIMAL(10,2))
	  ELSE 0 END AS USEDPCT_X			-- 파일시스템 사용율. % 단위
	, FS.EXPORTNAME_X					-- NFS EXPORT 명
	, FS.SERVERNAME_X					-- NFS EXPORT 서버
	, FS.PK__STORAGEEXTENT_X			-- 연결 스토리지 KEY
	--, FSDTL.*
FROM COMPSYS COMP
JOIN FILESYS FS ON FS.PK__PARENTFILESYSTEM_X = COMP.PK_X
JOIN DPLYBLCMPT FSDTL ON FSDTL.PK_X = FS.PK_X
WHERE COMP.TYPE_X NOT IN ('Router')
)
;
-----------------------------------------
-- 4. COMPUTER SYSTEM NETWORK INTERFACE CARD VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_NETIF_V
AS
WITH NETIPADDR (PK_X, RNUM, IP_X)
AS
(
        SELECT BASE.PK_X, BASE.RNUM, BASE.IP_X
        FROM (
				SELECT	NETIP.PK__L2INTERFACE_X AS PK_X
						, ROWNUMBER() OVER (PARTITION BY NETIP.PK__L2INTERFACE_X) AS RNUM
						, NETIP.DISPLAYNAME_X AS IP_X
				FROM 	NTINTRFC NETIP
				WHERE 	NETIP.PK__L2INTERFACE_X IS NOT NULL
        ) BASE
        WHERE BASE.RNUM = 1

        UNION ALL
        
        SELECT  EXT.PK_X, EXT.RNUM, T0.IP_X || '],[' || EXT.IP_X
        FROM    (
				SELECT	NETIP.PK__L2INTERFACE_X AS PK_X
						, ROWNUMBER() OVER (PARTITION BY NETIP.PK__L2INTERFACE_X) AS RNUM
						, NETIP.DISPLAYNAME_X AS IP_X
				FROM 	NTINTRFC NETIP
				WHERE 	NETIP.PK__L2INTERFACE_X IS NOT NULL
                ) EXT, NETIPADDR T0				
        WHERE T0.PK_X = EXT.PK_X
        AND T0.RNUM + 1 = EXT.RNUM
        AND T0.RNUM < 10	-- 너무 많은 IP 를 가지고 있는 것들이 있을수 있으므로 10개까지만 한다.				
)
SELECT COMP.PK_X	PK_X_COMPSYS		-- TADDM COMPSYS 의 KEY
	, NETIF.PK_X	PK_X_NETIF			-- NTINTRFC 의 KEY
	, NETIF.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH		-- 최종 수정 시간. EPOCH TIME	
	, TIMESTAMP('1970-01-01-00.00.00') + (NETIF.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, NETIF.DELETED_X					-- NETIF 삭제 여부. 0 이면 정상, 1 이면 삭제	
	, NETIF.JDOCLASSX					-- NETIF CLASS 명	
	, NETIF.INDEX_X						-- NETIF INDEX
	, NETIF.INTERFACENAME_X				-- NETIF INTERFACE 명
	, NETIF.DESCRIPTION_X				-- NETIF 설명
	, NETIF.CONTEXTIP_X					-- NETDEVICE 의 대표 IP
	, NETIF.DISPLAYNAME_X				-- NETIF TADDM DISPLAY 명
	, NETIF.INTERFACEMTU_X				-- NETIF 최대 전송 단위
	--, NETIF.INTERFACESPEED_X			-- NETIF 속도. BIT 단위
	, NETIF.INTERFACESPEED_X / 1000000 AS INTERFACESPEED_X			-- NETIF 속도. MEGA BIT / SEC 단위
	--, NETIF.PROMISCIOUS_X
	, CASE WHEN NETIF.PROMISCUOUS_X	= 0 THEN 'False'	
		   WHEN NETIF.PROMISCUOUS_X	= 1 THEN 'True'
	  ELSE NULL END AS PROMISCUOUS_X 	-- NETIF PROMISCUOUS 1 이면 TRUE, 0 이면 FALSE
	, CASE WHEN NETIF.DUPLEX_X = 1 THEN 'Half Duplex'
		   WHEN NETIF.DUPLEX_X = 2 THEN 'Full Duplex'
		   WHEN NETIF.DUPLEX_X = 4 THEN 'Auto'					-- NETIF DUPLEX 정보
	  ELSE NULL END AS DUPLEX_X
	, NETIF.ENCAPSULATION_X				-- NETIF 캡슐화 정보. 인터페이스 유형
	, NETIF.HWADDRESS_X					-- NETIF 하드웨어 주소
	, CASE WHEN NETIF.ADMINSTATE_X = 2 THEN '작동'
		   WHEN NETIF.ADMINSTATE_X = 3 THEN '작동중지'
	  ELSE NULL END AS ADMINSTATE_X		-- NETIF 관리상태. 네트워크 디바이스에만 적용되며 2이면 작동. 3이면 작동중지. 컴퓨터시스템은 값이 NULL 이다.
	, '[' || IPLIST.IP_X || ']' AS IP_X	-- NETIF 의 IP 주소
	--, NETIF.PK__SYSTEM_X
	--, NETIF.PK__PARENTL2INTERFACE_X
	--, NETIF.PK__PARENTIPINTERFACE_X
	--, NETIF.PK__IPNETWORK_X
	--, NETIF.PK__L2INTERFACE_X
	--, NETIF.*
FROM COMPSYS COMP
JOIN NTINTRFC NETIF ON NETIF.PK__SYSTEM_X = COMP.PK_X AND NETIF.PK__PARENTL2INTERFACE_X = COMP.PK_X		-- NETWORK INTERFACE CARD 정보만 추출 (L2INTERFACE)
-- IP 목록을 조회한다.
LEFT JOIN ( SELECT PK_X, MAX(RNUM) AS MNUM FROM NETIPADDR GROUP BY PK_X ) IPMAX ON IPMAX.PK_X = NETIF.PK_X
LEFT JOIN NETIPADDR IPLIST ON IPLIST.PK_X = NETIF.PK_X AND IPLIST.RNUM = IPMAX.MNUM
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
;
-----------------------------------------
-- 4. COMPUTER SYSTEM IP ADDRESS VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_IPADDR_V
AS
(
SELECT COMP.PK_X	PK_X_COMPSYS		-- TADDM COMPSYS 의 KEY
	, NETIF.PK_X	PK_X_IPADDR			-- IPADDR 의 KEY
	, NETIF.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH		-- 최종 수정 시간. EPOCH TIME	
	, TIMESTAMP('1970-01-01-00.00.00') + (NETIF.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, NETIF.DELETED_X					-- IPADDR 삭제 여부. 0 이면 정상, 1 이면 삭제	
	, NETIF.JDOCLASSX					-- IPADDR CLASS 명	
	, CASE WHEN IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV4AddressJdo' THEN 'IPv4'
	       WHEN IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV6AddressJdo' THEN 'IPv6'
	  ELSE IP.JDOCLASSX END AS IPADDR_TYPE	-- IP 유형
	--, NETIF.CONTEXTIP_X
	, NETIF.DISPLAYNAME_X				-- IP ADDRESS 명
	--, IP.CONTEXTIP_X					-- IP ADDRESS 의 CONTEXTIP
	--, IP.DISPLAYNAME_X
	--, IP.STRINGNOTATION_X
	, (SELECT INTERFACENAME_X FROM NTINTRFC WHERE PK_X = NETIF.PK__L2INTERFACE_X) INTERFACENAME_X	-- 인터페이스 명
	, IPNET.NETMASK_X
	, IPNET.SUBNETADDRESS_X
	--, NETIF.PK__SYSTEM_X
	--, IP.JDOCLASSX						-- IP CLASS 명	
	--, NETIF.PK__PARENTL2INTERFACE_X
	--, NETIF.PK__PARENTIPINTERFACE_X
	--, NETIF.PK__IPNETWORK_X
	--, NETIF.PK__L2INTERFACE_X
	--, NETIF.*
	--, IP.*
	--, IPNET.*
FROM COMPSYS COMP
JOIN NTINTRFC NETIF ON NETIF.PK__SYSTEM_X = COMP.PK_X AND NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X		-- IP ADDRESS 정보만 추출 (IPINTERFACE)
LEFT JOIN IPADDR IP ON IP.PK_X = NETIF.PK__IPADDRESS_X
LEFT JOIN IPNETWORK IPNET ON IPNET.PK_X = NETIF.PK__IPNETWORK_X
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
)
;
-----------------------------------------
-- 5. SOFTWARE INSTALLATION VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_SW_V
AS
(
SELECT COMP.PK_X	PK_X_COMPSYS		-- TADDM COMPSYS 의 KEY
	, SW.PK_X		PK_X_SW				-- SOFTWARE 의 KEY
	, SW.LASTMODIFIEDTIME_X		LASTMODIFIEDTIME_X_EPOCH		-- 최종 수정 시간. EPOCH TIME
	, TIMESTAMP('1970-01-01-00.00.00') + (SW.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, SW.DELETED_X						-- 삭제 여부. 0 이면 동작. 1이면 삭제		
	, SW.PUBLISHER_X					-- 소프트웨어 제조사
	, SW.NAME_X							-- 소프트웨어 명
	--, SW.CONTEXTIP_X
	, SW.DISPLAYNAME_X					-- 소프트웨어 표현명
	, SW.DESCRIPTION_X					-- 소프트웨어 설명
	, SW.SOFTWAREVERSION_X				-- 소프트웨어 버전
	, SW.INSTALLEDDATE_X				-- 소프트웨어 설치일
	--, SW.*
FROM COMPSYS COMP
JOIN OPSYS OP ON OP.PK_X = COMP.PK__OSRUNNING_X AND OP.DELETED_X = 0	-- OS 가 삭제된 후 재 설치될수 있으므로, DELETED 가 아닌 것만 조회한다.
JOIN SFTCMP SW ON SW.PK__PARENTSOFTWARECOMPONENT_X = OP.PK_X
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
AND SW.PUBLISHER_X NOT IN ('DISM Package Manager Provider', 'WindowsUpdateAgent')	-- WINDOWS 패치 정보는 제외한다.
--AND SW.PUBLISHER_X NOT IN ('Red Hat, Inc.', 'CentOS')								-- LINUX OS 정보는 제외한다.
)
;
-----------------------------------------
-- 6. APPLICATION VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_APPSRVR_V
AS
WITH APPPORT (PK_X, RNUM, PORT_X)
AS
(
        SELECT	BASE.PK_X, BASE.RNUM, BASE.PORT_X
        FROM 	(
	        	SELECT PK_X
	        		, ROWNUMBER() OVER (PARTITION BY PK_X) AS RNUM
	        		, CAST(PORT_X AS VARCHAR(255)) AS PORT_X
	        	FROM (
					SELECT DISTINCT APP.PK_X AS PK_X	-- TADDM APPSRVR 의 KEY
						--, CAST(PORT.PORTNUMBER_X AS VARCHAR(255)) AS PORT_X	-- 포트번호
						, PORT.PORTNUMBER_X AS PORT_X	-- 포트번호
					FROM APPSRVR APP
					JOIN PROCPOOL POOL ON POOL.PK__PARENTPROCESSPOOL_X = APP.PK_X
					JOIN PROCESSPOOLJSSES_D8D4C105X POOLMAP ON POOLMAP.PK__JDOIDX = POOL.PK_X
					JOIN RTPROC PROC ON PROC.PK_X = POOLMAP.PK__RUNTIMEPROCESSES_X
					JOIN RUNTIMEPROCESSJDO_PORTS_X PORTMAP ON PORTMAP.PK__JDOIDX = PROC.PK_X
					JOIN BINDADDR PORT ON PORT.PK_X = PORTMAP.PK__PORTS_X AND PORT.DELETED_X = 0	-- 삭제되지 않은 PORT 만 조회한다.
					WHERE APP.HIERARCHYTYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager')
					AND APP.HIERARCHYTYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
					AND PORT.PORTNUMBER_X > 0		-- PORT 0 번인 것은 WINDOWS 에서만 발견되는데 의미가 없는것 같다.
					ORDER BY APP.PK_X, PORT.PORTNUMBER_X
				) 
        ) BASE
        WHERE 	BASE.RNUM = 1

        UNION ALL
        
        SELECT  EXT.PK_X, EXT.RNUM, T0.PORT_X || '],[' || EXT.PORT_X
        FROM    (
	        	SELECT PK_X
	        		, ROWNUMBER() OVER (PARTITION BY PK_X) AS RNUM
	        		--, PORT_X
	        		, CAST(PORT_X AS VARCHAR(255)) AS PORT_X
	        	FROM (
					SELECT DISTINCT APP.PK_X AS PK_X	-- TADDM APPSRVR 의 KEY
						, PORT.PORTNUMBER_X AS PORT_X	-- 포트번호
					FROM APPSRVR APP
					JOIN PROCPOOL POOL ON POOL.PK__PARENTPROCESSPOOL_X = APP.PK_X
					JOIN PROCESSPOOLJSSES_D8D4C105X POOLMAP ON POOLMAP.PK__JDOIDX = POOL.PK_X
					JOIN RTPROC PROC ON PROC.PK_X = POOLMAP.PK__RUNTIMEPROCESSES_X
					JOIN RUNTIMEPROCESSJDO_PORTS_X PORTMAP ON PORTMAP.PK__JDOIDX = PROC.PK_X
					JOIN BINDADDR PORT ON PORT.PK_X = PORTMAP.PK__PORTS_X AND PORT.DELETED_X = 0	-- 삭제되지 않은 PORT 만 조회한다.
					WHERE APP.HIERARCHYTYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager')
					AND APP.HIERARCHYTYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
					AND PORT.PORTNUMBER_X > 0		-- PORT 0 번인 것은 WINDOWS 에서만 발견되는데 의미가 없는것 같다.
					ORDER BY APP.PK_X, PORT.PORTNUMBER_X
				)
        ) EXT, APPPORT T0				
        WHERE T0.PK_X = EXT.PK_X
        AND T0.RNUM + 1 = EXT.RNUM
        AND T0.RNUM < 15	-- 너무 많은 PORT 를 가지고 있는 것들이 있을수 있으므로 15개까지만 한다.				
)
SELECT APP.PK_X	PK_X_APPSRVR		-- TADDM APPSRVR 의 KEY
	, APP.PK__HOST_X PK_X_COMPSYS	-- TADDM COMPSYS 의 KEY
	, APP.LASTMODIFIEDTIME_X	LASTMODIFIEDTIME_X_EPOCH	-- 최종 수정 시간. EPOCH TIME	
	, TIMESTAMP('1970-01-01-00.00.00') + (APP.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, APP.DELETED_X					-- APPSRVR 삭제 여부. 0 이면 정상, 1 이면 삭제	
	, CASE WHEN COMP.VIRTUAL_X = 1 AND EXISTS (SELECT PK__HOST_X FROM APPSRVR WHERE JDOCLASSX IN ('com.collation.topomgr.jdo.topology.app.KVMJdo') AND PK__HOST_X = COMP.PK__HOSTSYSTEM_X) 
		   		AND (SELECT UPPER(KERNELVERSION_X) FROM OPSYS WHERE PK_X = (SELECT PK__OSRUNNING_X FROM COMPSYS WHERE PK_X = COMP.PK__HOSTSYSTEM_X)) LIKE '%NUTANIX%' 
				THEN COALESCE(COMP.DISPLAYNAME_X, COMP.NAME_X)			-- NUTANIX 인 경우, DISPLAYNAME 을 사용한다.
	  ELSE COALESCE(COMP.NAME_X, COMP.DISPLAYNAME_X) END AS HOSTNAME_X		-- NAME 이 없으면 DISPLAYNAME 을 사용한다.	
	, CASE WHEN APP.HIERARCHYTYPE_X IN ('ApacheServer', 'HTTPServer', 'IBMHTTPServer', 'IIsWebService', 'OracleAppHTTPServer') THEN 'WebServer'
		   WHEN APP.HIERARCHYTYPE_X IN ('Db2Instance', 'HanaDB', 'MaxDB', 'MySql', 'OracleInstance', 'PostgreSQL', 'SqlServer', 'SybaseServer', 'TiberoDB') THEN 'DatabaseServer'
		   WHEN APP.HIERARCHYTYPE_X IN ('JBossServer', 'Tomcat', 'WebLogicAdminServer', 'WebLogicNodeManager', 'WebLogicServer', 'IBMWebSphereLibertyProfile') THEN 'WebApplicationServer'
		   WHEN APP.HIERARCHYTYPE_X IN ('DominoServer', 'HPSystemManagementHomepageSoftware', 'JavaServer', 'Jenkins', 'KVM', 'MicrosoftHyperV', 'VirtualCenter') THEN 'ApplicationServer'
	  ELSE 'GeneralApplicationServer' END AS TYPE_X	
	, APP.HIERARCHYTYPE_X
	, APP.HIERARCHYDOMAIN_X
	, APP.OBJECTTYPE_X
	, APP.JDOCLASSX	
	, APP.KEYNAME_X	
	, APP.NAME_X
	--, APP.PRODUCTNAME_X
	, CASE WHEN APP.HIERARCHYTYPE_X = 'HTTPServer' THEN APP.OBJECTTYPE_X
		   WHEN APP.HIERARCHYTYPE_X = 'ApacheServer' THEN COALESCE(APP.PRODUCTNAME_X,'Apache')
	  ELSE COALESCE(APP.PRODUCTNAME_X,APP.HIERARCHYTYPE_X) END AS PRODUCTNAME_X
	, APP.PRODUCTVERSION_X
	, APP.RELEASE_X
	, APP.SERVICEPACK_X
	, APP.VENDORNAME_X
	, APP.VERSIONSTRING_X	
	, APP.FULLVERSION_X	
	, APP.DISPLAYNAME_X
	, '[' || APP.CONTEXTIP_X || ']' AS CONTEXTIP_X
	--, CASE WHEN PORT.PORTNUMBER_X = -1 THEN NULL
	--  ELSE PORT.PORTNUMBER_X END AS PORTNUMBER_X
	, '[' || TO_CHAR(PORT.PORTNUMBER_X) || ']' AS PORTNUMBER_X
	, CASE WHEN PORTLIST.PORT_X IS NULL THEN '[' || TO_CHAR(PORT.PORTNUMBER_X) || ']'
	  ELSE '[' || PORTLIST.PORT_X || ']' END AS PORTLIST_X 
	, PORTMAX.MNUM AS PORTLISTNUM_X
	, APP.HOME_X
	, APP.IMAGEPATH_X
	, APP.RUNAS_X	
	, APP.BUILDLEVEL_X			-- FOR DB2
	, APP.LEVEL_X
	, APP.PIPENAME_X			-- FOR MSSQL
	, APP.LANGUAGE_X			-- FOR MSSQL
	, APP.RUNASUSER_X			-- FOR MSSQL
	, APP.SORTORDER_X			-- FOR MSSQL
	, APP.MAJORVERSION_X
	, APP.MODIFIER_X
	--, APP.*
FROM APPSRVR APP
LEFT JOIN COMPSYS COMP ON COMP.PK_X = APP.PK__HOST_X
LEFT JOIN BINDADDR PORT ON PORT.PK_X = APP.PK__PRIMARYSAP_X
-- PORT 목록을 조회한다.
LEFT JOIN ( SELECT PK_X, MAX(RNUM) AS MNUM FROM APPPORT GROUP BY PK_X ) PORTMAX ON PORTMAX.PK_X = APP.PK_X
LEFT JOIN APPPORT PORTLIST ON PORTLIST.PK_X = APP.PK_X AND PORTLIST.RNUM = PORTMAX.MNUM
WHERE APP.HIERARCHYTYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
AND APP.HIERARCHYTYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
AND APP.PK__HOST_X IS NOT NULL

;
-----------------------------------------
-- 7. APPLICATION USING PORT VIEW (중복 데이터가 나올수 있어서 DISTINCT 한다.)
-----------------------------------------
CREATE OR REPLACE VIEW IM_APPSRVR_PORT_V
AS
(
SELECT DISTINCT 
	--APP.PK_X	PK_X_APPSRVR	-- TADDM APPSRVR 의 KEY
	APP.PK__HOST_X 		PK_X_COMPSYS	-- TADDM COMPSYS 의 KEY
	, APP.PK__HOST_X || '-' || PORT.PORTNUMBER_X AS PK_X_PORT
	, 'PORT:' || PORT.PORTNUMBER_X AS PORTNUMBER_X						-- 포트번호
	--, PORT.DELETED_X
	--, PORT.*
FROM APPSRVR APP
JOIN PROCPOOL POOL ON POOL.PK__PARENTPROCESSPOOL_X = APP.PK_X
JOIN PROCESSPOOLJSSES_D8D4C105X POOLMAP ON POOLMAP.PK__JDOIDX = POOL.PK_X
JOIN RTPROC PROC ON PROC.PK_X = POOLMAP.PK__RUNTIMEPROCESSES_X
JOIN RUNTIMEPROCESSJDO_PORTS_X PORTMAP ON PORTMAP.PK__JDOIDX = PROC.PK_X
JOIN BINDADDR PORT ON PORT.PK_X = PORTMAP.PK__PORTS_X AND PORT.DELETED_X = 0	-- 삭제되지 않은 PORT 만 조회한다.
WHERE APP.HIERARCHYTYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager')
--ORDER BY APP.PK__HOST_X, APP.PK_X
)
;
-----------------------------------------
-- 8. VMWARE CLUSTER VIEW
-----------------------------------------
CREATE OR REPLACE VIEW IM_CLUSTERVMWARE_V
AS
(
SELECT TIMESTAMP('1970-01-01-00.00.00') + (CLS.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X	
	, CLS.PK_X AS PK_X_VMWARECLUSTER
	, CLS.DISPLAYNAME_X
	--, CLS.TYPE_X
	, 'ClusterApplicationServer' AS TYPE_X
	, CLS.HIERARCHYDOMAIN_X
	, CLS.HIERARCHYTYPE_X
	, CLS.LABEL_X
	, CLS.NAME_X
	, CLS.JDOCLASSX
	, VMC.PK__PARENTVMWARECLUSTER_X AS PK_X_DATACENTER
	, VDC.DISPLAYNAME_X AS DATACENTERDISPLAYNAME_X
	, VDC.LABEL_X AS DATACENTERLABEL_X
	, VDC.NAME_X AS DATACENTERNAME_X
	--, CLS.*
    , 'VMWare Cluster' AS PRODUCTNAME_X
    , 'VMware' AS VENDORNAME_X
FROM "COLLECTION" CLS
LEFT JOIN ASCLUSTER VMC ON VMC.PK_X = CLS.PK_X
LEFT JOIN "COLLECTION" VDC ON VDC.PK_X = VMC.PK__PARENTVMWARECLUSTER_X
WHERE CLS.JDOCLASSX = 'com.collation.topomgr.jdo.topology.sys.vmware.VMWareClusterJdo'
)
;

-----------------------------------------
-- 8. VMWARE CLUSTER RELATION : SOURCE : VMWARECLUSTER, TARGET : VMWARE EXIHOST
-----------------------------------------
SELECT TIMESTAMP('1970-01-01-00.00.00') + (CLS.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X	
	, CLS.PK_X AS SRC_PK_X
	--, CLS.DISPLAYNAME_X, CLS.HIERARCHYDOMAIN_X, CLS.HIERARCHYTYPE_X, CLS.LABEL_X, CLS.NAME_X
	--, CLS.JDOCLASSX
	, COMP.PK_X AS TGT_PK_X
	, 'CLUSTER' AS RELATIONNM
	--, COMP.DISPLAYNAME_X
	--, COMP.NAME_X
	--, COMP.*
	--, HOST.*
	--, CLS.*
FROM "COLLECTION" CLS
LEFT JOIN COMPUTERSYSTTEMS_A267EEF0X HOST ON HOST.PK__JDOIDX = CLS.PK_X
LEFT JOIN COMPSYS COMP ON COMP.PK_X = HOST.PK__COMPUTERSYSTEMS_X
WHERE CLS.JDOCLASSX = 'com.collation.topomgr.jdo.topology.sys.vmware.VMWareClusterJdo'
ORDER BY CLS.PK_X, COMP.NAME_X



-----------------------------------------
-- 9. RELATION VIEW
--   1) VIRTUALIZE	: 가상화 관계
--   2) CONNECT		: 네트워크 연결 관계
--   3) RUN			: 애플리케이션 구동
--   4) DEPEND		: 애플리케이션 연결관계
--   5) CONTAIN		: 부속품 (파일시스템, 네트워크 인터페이스 카드, IP 주소, 포트)
--   6) USE			: 애플리케이션이 PORT 사용
--   7) USE			: 네트워크 인터페이스 카드가 IP 사용
--   8) CLUSTER		: VMWare Cluster 관계
-----------------------------------------
CREATE OR REPLACE VIEW IM_RELATION_V
AS
(
-----------------------
-- 1) VIRTUALIZE : SOURCE -> HOST, TARGET -> VIRTUAL
-----------------------
SELECT 	TIMESTAMP('1970-01-01-00.00.00') + (HOST.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X	
	, COMP.PK__HOSTSYSTEM_X	SRC_PK_X	
	--, HOST.DELETED_X			SRC_DELETED_X
	--, HOST.LASTMODIFIEDTIME_X	SRC_LASTMODIFIEDTIME_X
	--, HOST.NAME_X				SRC_NAME_X
	--, HOST.TYPE_X				SRC_TYPE_X
	--, HOST.VIRTUAL_X			SRC_VIRTUAL_X	
	--, HOST.HIERARCHYDOMAIN_X	SRC_HIERARCHYDOMAIN_X
	--, HOST.HIERARCHYTYPE_X		SRC_HIERARCHYTYPE_X
	--, HOST.JDOCLASSX			SRC_JDOCLASSX	
	, COMP.PK_X					TGT_PK_X
	, 'VIRTUALIZE'				RELATIONNM
	--, COMP.DELETED_X			TGT_DELETED_X
	--, COMP.LASTMODIFIEDTIME_X	TGT_LASTMODIFIEDTIME_X
	--, COMP.NAME_X				TGT_NAME_X
	--, COMP.TYPE_X				TGT_TYPE_X
	--, COMP.VIRTUAL_X			TGT_VIRTUAL_X	
	--, COMP.HIERARCHYDOMAIN_X	TGT_HIERARCHYDOMAIN_X
	--, COMP.HIERARCHYTYPE_X		TGT_HIERARCHYTYPE_X
	--, COMP.JDOCLASSX			TGT_JDOCLASSX
FROM COMPSYS COMP
JOIN COMPSYS HOST ON HOST.PK_X = COMP.PK__HOSTSYSTEM_X
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'IpDevice', 'Router', 'LoadBalancer')
AND COMP.HIERARCHYTYPE_X NOT IN ('ComputerSystem')
--AND COMP.PK__HOSTSYSTEM_X IS NOT NULL
----------------------------
-- FOR NUTANIX
----------------------------
UNION ALL
SELECT 	TIMESTAMP('1970-01-01-00.00.00') + (HOST.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X	
	, COMP.PK__HOSTSYSTEM_X	SRC_PK_X	
	--, HOST.DELETED_X			SRC_DELETED_X
	--, HOST.LASTMODIFIEDTIME_X	SRC_LASTMODIFIEDTIME_X
	--, HOST.NAME_X				SRC_NAME_X
	--, HOST.TYPE_X				SRC_TYPE_X
	--, HOST.VIRTUAL_X			SRC_VIRTUAL_X	
	--, HOST.HIERARCHYDOMAIN_X	SRC_HIERARCHYDOMAIN_X
	--, HOST.HIERARCHYTYPE_X		SRC_HIERARCHYTYPE_X
	--, HOST.JDOCLASSX			SRC_JDOCLASSX	
	--, COMP.PK_X				TGT_PK_X
	, NTNX.PK_X					TGT_PK_X
	, 'VIRTUALIZE'				RELATIONNM
	--, NTNX.DELETED_X			TGT_DELETED_X
	--, NTNX.LASTMODIFIEDTIME_X	TGT_LASTMODIFIEDTIME_X
	--, NTNX.NAME_X				TGT_NAME_X
	--, NTNX.TYPE_X				TGT_TYPE_X
	--, NTNX.VIRTUAL_X			TGT_VIRTUAL_X	
	--, NTNX.HIERARCHYDOMAIN_X	TGT_HIERARCHYDOMAIN_X
	--, NTNX.HIERARCHYTYPE_X		TGT_HIERARCHYTYPE_X
	--, NTNX.JDOCLASSX			TGT_JDOCLASSX
FROM COMPSYS COMP
JOIN COMPSYS HOST ON HOST.PK_X = COMP.PK__HOSTSYSTEM_X
LEFT JOIN COMPSYS NTNX ON UPPER(COMP.NAME_X) = NTNX.SERIALNUMBER_X
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'IpDevice', 'Router', 'LoadBalancer')
AND COMP.HIERARCHYTYPE_X IN ('ComputerSystem')
AND NTNX.PK_X IS NOT NULL
-----------------------
-- 2) CONNECT (네트워크 장비, 컴퓨터의 연결은 SwitchToDevice 로 한다.)
-- ROUTER 정보가 추가되었을 때를 검증해보아야 한다.
-- SOURCE -> BRIDGE, TARGET -> BRIDGE OR DEVICE
-----------------------
UNION ALL

SELECT 	TIMESTAMP('1970-01-01-00.00.00') + (REL.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_PK_X
	--, REL.PK_X
	--, REL.DELETED_X
	--, REL.SOURCE_X
    --, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_DISPLAYNAME_X
    --, COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_TYPE_X
    --, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_CONTEXTIP_X
    --, REL.TARGET_X
    , COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_PK_X
    --, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_DISPLAYNAME_X
    --, COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_TYPE_X
    --, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_CONTEXTIP_X
    , 'CONNECT'			RELATIONNM
    --, rel.*
FROM RELATION REL
WHERE REL.TYPE_X IN ('com.collation.platform.model.topology.app.dependencies.SwitchToDevice')
AND COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) NOT IN ('MACDevice')
-----------------------
-- 3) RUN
-----------------------
UNION ALL

SELECT TIMESTAMP('1970-01-01-00.00.00') + (APP.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, APP.PK__HOST_X 				SRC_PK_X	
	, APP.PK_X						TGT_PK_X
	--, APP.LASTMODIFIEDTIME_X		TGT_LASTMODIFIEDTIME_X
	--, APP.DELETED_X					TGT_DELETED_X
	--, APP.HIERARCHYTYPE_X			TGT_HIERARCHYTYPE_X
	--, APP.HIERARCHYDOMAIN_X			TGT_HIERARCHYDOMAIN_X
	--, APP.OBJECTTYPE_X				TGT_OBJECTTYPE_X
	, 'RUN'							RELATIONNM
FROM APPSRVR APP
WHERE APP.HIERARCHYTYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
AND APP.HIERARCHYTYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
AND APP.PK__HOST_X IS NOT NULL
-----------------------
-- 4) DEPEND
-----------------------
-- IpDependency (이건 사용하지 않는다.)
-----------------------
--UNION ALL

--SELECT X.LASTMODIFIEDTIME_X
--	, X.SRC_PK_X
--	--, X.SRC_TYPE_X, X.SRC_CONTEXTIP_X
--	, X.TGT_PK_X
--	--, X.TGT_TYPE_X, X.TGT_CONTEXTIP_X
--	, 'DEPEND' RELATIONNM
--FROM 
--(
--	SELECT COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_PK_X
--		, TIMESTAMP('1970-01-01-00.00.00') + (REL.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
--		--, REL.PK_X
--		--, REL.DELETED_X
--		--, REL.SOURCE_X
--		--, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_DISPLAYNAME_X
--		, COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_TYPE_X
--		, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_CONTEXTIP_X
--		--, REL.TARGET_X
--		, COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_PK_X
--		--, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_DISPLAYNAME_X
--		, COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_TYPE_X
--		, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_CONTEXTIP_X
--	FROM RELATION REL
--	--WHERE REL.TYPE_X IN ('com.collation.platform.model.topology.app.dependencies.SystemDependency', 'com.collation.platform.model.topology.app.dependencies.TransactionalDependency')
--	WHERE REL.TYPE_X IN ('com.collation.platform.model.topology.app.dependencies.IpDependency')
--) X
--WHERE X.SRC_PK_X IS NOT NULL
----AND SRC_CONTEXTIP_X = TGT_CONTEXTIP_X
--AND SRC_TYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
--AND SRC_TYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
--AND TGT_TYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
--AND TGT_TYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
-----------------------
-- TransactionalDependency
-----------------------
UNION ALL

SELECT X.LASTMODIFIEDTIME_X, X.SRC_PK_X, X.TGT_PK_X, 'DEPEND' RELATIONNM
FROM (
	SELECT  TIMESTAMP('1970-01-01-00.00.00') + (REL.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
		, COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_PK_X
		--, REL.PK_X
		--, REL.DELETED_X
		--, REL.SOURCE_X
	    --, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_DISPLAYNAME_X
	    , COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_TYPE_X
	    --, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.SOURCE_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.SOURCE_X)) SRC_CONTEXTIP_X
	    --, REL.TARGET_X
	    , COALESCE((SELECT PK_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT PK_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_PK_X
	    --, COALESCE((SELECT DISPLAYNAME_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT DISPLAYNAME_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_DISPLAYNAME_X
	    , COALESCE((SELECT TYPE_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT HIERARCHYTYPE_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_TYPE_X
	    --, COALESCE((SELECT CONTEXTIP_X FROM COMPSYS WHERE GUID_X = REL.TARGET_X), (SELECT CONTEXTIP_X from APPSRVR WHERE GUID_X = REL.TARGET_X)) TGT_CONTEXTIP_X
	FROM RELATION REL
	--WHERE REL.TYPE_X IN ('com.collation.platform.model.topology.app.dependencies.SystemDependency', 'com.collation.platform.model.topology.app.dependencies.TransactionalDependency')
	WHERE REL.TYPE_X IN ('com.collation.platform.model.topology.app.dependencies.TransactionalDependency')
) X
WHERE SRC_TYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
AND SRC_TYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
AND TGT_TYPE_X NOT IN ('SMBService', 'NFSService', 'OracleListener', 'DNSService', 'ActiveDirectory', 'WebLogicNodeManager') -- 이것들은 APP.PK__HOST_X 이 NULL 이다.
AND TGT_TYPE_X NOT IN ('JavaServer')	-- 이것들은 조회할 의미가 없다.
-----------------------
-- 5) CONTAIN
-----------------------
-- CPU
-----------------------
UNION ALL

SELECT  TIMESTAMP('1970-01-01-00.00.00') + (CPU.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	--, CPU.LASTMODIFIEDTIME_X	-- 최종 수정 시간. EPOCH TIME
	, COMP.PK_X	SRC_PK_X
	, CPU.PK_X		TGT_PK_X
	, 'CONTAIN'		RELATIONNM
	--, CPU.DELETED_X				-- CPU 삭제 여부. 0 이면 정상, 1 이면 삭제	
FROM COMPSYS COMP
JOIN CPU CPU ON CPU.PK__PARENTCPU_X = COMP.PK_X
-----------------------
-- FILESYSTEM
-----------------------
UNION ALL

SELECT TIMESTAMP('1970-01-01-00.00.00') + (FSDTL.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, COMP.PK_X	SRC_PK_X
	, FS.PK_X		TGT_PK_X
	, 'CONTAIN'		RELATIONNM	
	--, FSDTL.LASTMODIFIEDTIME_X			-- 최종 수정 시간. EPOCH TIME
	--, FSDTL.DELETED_X					-- FILESYSTEM 삭제 여부. 0 이면 정상, 1 이면 삭제	
	--, FS.MOUNTPOINT_X					-- 파일시스템 마운트명
FROM COMPSYS COMP
JOIN FILESYS FS ON FS.PK__PARENTFILESYSTEM_X = COMP.PK_X
JOIN DPLYBLCMPT FSDTL ON FSDTL.PK_X = FS.PK_X
WHERE COMP.TYPE_X NOT IN ('Router')
-----------------------
-- NETWORK INTERFACE CARD
-----------------------
UNION ALL

SELECT TIMESTAMP('1970-01-01-00.00.00') + (NETIF.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, COMP.PK_X	SRC_PK_X
	, NETIF.PK_X	TGT_PK_X
	, 'CONTAIN'		RELATIONNM	
	--, NETIF.LASTMODIFIEDTIME_X			-- 최종 수정 시간. EPOCH TIME	
	--, NETIF.DELETED_X					-- NETIF 삭제 여부. 0 이면 정상, 1 이면 삭제	
FROM COMPSYS COMP
JOIN NTINTRFC NETIF ON NETIF.PK__SYSTEM_X = COMP.PK_X AND NETIF.PK__PARENTL2INTERFACE_X = COMP.PK_X		-- NETWORK INTERFACE CARD 정보만 추출 (L2INTERFACE)
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
-----------------------
-- IPADDRESS
-----------------------
UNION ALL

SELECT TIMESTAMP('1970-01-01-00.00.00') + (NETIF.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, COMP.PK_X	SRC_PK_X
	, NETIF.PK_X	TGT_PK_X
	, 'CONTAIN'		RELATIONNM
	--, NETIF.LASTMODIFIEDTIME_X			-- 최종 수정 시간. EPOCH TIME	
	--, NETIF.DELETED_X					-- IPADDR 삭제 여부. 0 이면 정상, 1 이면 삭제	
FROM COMPSYS COMP
JOIN NTINTRFC NETIF ON NETIF.PK__SYSTEM_X = COMP.PK_X AND NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X		-- IP ADDRESS 정보만 추출 (IPINTERFACE)
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
-----------------------
-- 6) USE (IP. NETIF 의 IP ADDRESS 사용)
-----------------------
UNION ALL

SELECT TIMESTAMP('1970-01-01-00.00.00') + (IPADDR.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X
	, NETIF.PK_X	SRC_PK_X
	--, COMP.PK_X	PK_X_COMPSYS		-- TADDM COMPSYS 의 KEY
	--, NETIF.DISPLAYNAME_X
	, IPADDR.PK_X	TGT_PK_X
	--, IPADDR.DISPLAYNAME_X
	, 'USE'			RELATIONNM
	--, IPADDR.*
	--, NETIF.*
FROM COMPSYS COMP
JOIN NTINTRFC NETIF ON NETIF.PK__SYSTEM_X = COMP.PK_X AND NETIF.PK__PARENTL2INTERFACE_X = COMP.PK_X		-- NETWORK INTERFACE CARD 정보만 추출 (L2INTERFACE)
JOIN NTINTRFC IPADDR ON IPADDR.PK__L2INTERFACE_X = NETIF.PK_X AND IPADDR.PK__SYSTEM_X = COMP.PK_X
WHERE COMP.TYPE_X NOT IN ('MACDevice', 'IpDevice')
AND NETIF.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.L2InterfaceJdo'
--AND COMP.PK_X = '04AFC1D8CA693555BF88E8DF5157C71F-0'
--ORDER BY COMP.PK_X, NETIF.PK_X
-----------------------
-- 7) VMWARE CLUSTER RELATION : SOURCE : VMWARECLUSTER, TARGET : VMWARE EXIHOST
-----------------------
UNION ALL
SELECT TIMESTAMP('1970-01-01-00.00.00') + (CLS.LASTMODIFIEDTIME_X / 1000.0) SECONDS LASTMODIFIEDTIME_X	
	, CLS.PK_X AS SRC_PK_X
	--, CLS.DISPLAYNAME_X, CLS.HIERARCHYDOMAIN_X, CLS.HIERARCHYTYPE_X, CLS.LABEL_X, CLS.NAME_X
	--, CLS.JDOCLASSX
	, COMP.PK_X AS TGT_PK_X
	, 'CLUSTER' AS RELATIONNM
	--, COMP.DISPLAYNAME_X
	--, COMP.NAME_X
	--, COMP.*
	--, HOST.*
	--, CLS.*
FROM "COLLECTION" CLS
LEFT JOIN COMPUTERSYSTTEMS_A267EEF0X HOST ON HOST.PK__JDOIDX = CLS.PK_X
LEFT JOIN COMPSYS COMP ON COMP.PK_X = HOST.PK__COMPUTERSYSTEMS_X
WHERE CLS.JDOCLASSX = 'com.collation.topomgr.jdo.topology.sys.vmware.VMWareClusterJdo'
--ORDER BY CLS.PK_X, COMP.NAME_X

)
;

-------------------------------------------------
-- IP LIST VIEW (2019.10.01)
-------------------------------------------------
CREATE OR REPLACE VIEW IM_COMPSYS_IPLIST_V
AS
WITH HOSTIP (PK_X, RNUM, IP_X)
AS
(
        SELECT BASE.PK_X, BASE.RNUM, BASE.IP_X
        FROM (
                SELECT  COMP.PK_X
                        , ROWNUMBER() OVER (PARTITION BY COMP.PK_X) AS RNUM
                        , IP.DISPLAYNAME_X AS IP_X
                FROM COMPSYS COMP
                LEFT JOIN NTINTRFC NETIF ON NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X
                LEFT JOIN IPADDR IP ON IP.PK_X = NETIF.PK__IPADDRESS_X AND IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV4AddressJdo'
                WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'Router', 'LoadBalancer')
                AND IP.DISPLAYNAME_X IS NOT NULL
                AND COALESCE(IP.DISPLAYNAME_X,'') NOT IN ('127.0.0.1')
                AND (SELECT COALESCE(ENCAPSULATION_X,'') FROM NTINTRFC WHERE PK_X = NETIF.PK__L2INTERFACE_X) NOT IN ('Local Loopback')  -- LOCAL LOOPBACK IP 는 제외한다.
        ) BASE
        WHERE BASE.RNUM = 1
        
        UNION ALL
        
        SELECT  EXT.PK_X, EXT.RNUM, T0.IP_X || '],[' || EXT.IP_X
        FROM    (
                SELECT  COMP.PK_X
                        , ROWNUMBER() OVER (PARTITION BY COMP.PK_X) AS RNUM
                        , IP.DISPLAYNAME_X AS IP_X
                FROM COMPSYS COMP
                LEFT JOIN NTINTRFC NETIF ON NETIF.PK__PARENTIPINTERFACE_X = COMP.PK_X
                LEFT JOIN IPADDR IP ON IP.PK_X = NETIF.PK__IPADDRESS_X AND IP.JDOCLASSX = 'com.collation.topomgr.jdo.topology.net.IpV4AddressJdo'
                WHERE COMP.TYPE_X NOT IN ('MACDevice', 'Bridge', 'Router', 'LoadBalancer')
                AND IP.DISPLAYNAME_X IS NOT NULL  
                AND COALESCE(IP.DISPLAYNAME_X,'') NOT IN ('127.0.0.1')
                AND (SELECT COALESCE(ENCAPSULATION_X,'') FROM NTINTRFC WHERE PK_X = NETIF.PK__L2INTERFACE_X) NOT IN ('Local Loopback')  -- LOCAL LOOPBACK IP 는 제외한다.
                ) EXT, HOSTIP T0
        WHERE T0.PK_X = EXT.PK_X
        AND T0.RNUM + 1 = EXT.RNUM
        AND T0.RNUM < 13	-- 너무 많은 IP 를 가지고 있는 것들이 있을수 있으므로 13단계까지만 한다.
)
SELECT B.PK_X, '[' || B.IP_X || ']' AS IP_X
FROM ( SELECT PK_X, MAX(RNUM) AS MNUM 
         FROM HOSTIP
     GROUP BY PK_X ) A, HOSTIP B
WHERE A.PK_X = B.PK_X
AND A.MNUM = B.RNUM
;
