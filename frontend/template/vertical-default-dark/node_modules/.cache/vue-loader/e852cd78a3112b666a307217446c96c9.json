{"remainingRequest":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/src/layout/partials/SettingsPannel.vue?vue&type=template&id=799a234c&","dependencies":[{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/src/layout/partials/SettingsPannel.vue","mtime":1582086237620},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/cache-loader/dist/cjs.js","mtime":1582031575038},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1582031594961},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/cache-loader/dist/cjs.js","mtime":1582031575038},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/index.js","mtime":1582031594959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}