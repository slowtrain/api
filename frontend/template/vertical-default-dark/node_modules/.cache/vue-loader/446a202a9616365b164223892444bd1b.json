{"remainingRequest":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/src/pages/apps/email.vue?vue&type=template&id=06f63fc3&","dependencies":[{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/src/pages/apps/email.vue","mtime":1582093767101},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/cache-loader/dist/cjs.js","mtime":1582031575038},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1582031594961},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/cache-loader/dist/cjs.js","mtime":1582031575038},{"path":"/Users/jyothish/Documents/justdo-vue-pro/template/vertical-default-dark/node_modules/vue-loader/lib/index.js","mtime":1582031594959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}